{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["LoginPage","React","lazy","DashboardPage","TransactionPage","App","Fragment","fallback","CircularProgress","Container","maxWidth","Box","sx","my","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAOMA,EAAYC,IAAMC,MAAK,kBAAM,8DAC7BC,EAAgBF,IAAMC,MAAK,kBAAM,8DACjCE,EAAkBH,IAAMC,MAAK,kBAAM,qEAsB1BG,MApBf,WACE,OACE,cAAC,IAAMC,SAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,WAAD,CAAUC,SAAU,cAACC,EAAA,EAAD,IAApB,SACE,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,GAAI,GAAf,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWhB,IACjC,cAAC,IAAD,CAAOe,KAAK,aAAaC,UAAWb,IACpC,cAAC,IAAD,CAAOY,KAAK,eAAeC,UAAWZ,kBCPvCa,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f605d93f.chunk.js","sourcesContent":["import React, { Suspense } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Container from '@mui/material/Container';\nimport Box from '@mui/material/Box';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport './App.css';\n\nconst LoginPage = React.lazy(() => import('./pages/Login/Login' /* webpackChunkName: \"Login\" */));\nconst DashboardPage = React.lazy(() => import('./pages/Dashboard/Dashboard' /* webpackChunkName: \"Dashboard\" */));\nconst TransactionPage = React.lazy(() => import('./pages/Transaction/Transaction' /* webpackChunkName: \"Transaction\" */));\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <BrowserRouter>\n        <Switch>\n          <Suspense fallback={<CircularProgress />}>\n            <Container maxWidth=\"sm\">\n              <Box sx={{ my: 4 }}>\n                <Route exact path=\"/\" component={LoginPage} />\n                <Route path=\"/dashboard\" component={DashboardPage} />\n                <Route path=\"/transaction\" component={TransactionPage} />\n              </Box>\n            </Container>\n          </Suspense>\n        </Switch>\n      </BrowserRouter>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}